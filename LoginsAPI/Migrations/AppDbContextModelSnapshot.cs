// <auto-generated />
using System;
using LoginsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginsAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoginsAPI.Models.Area", b =>
                {
                    b.Property<int>("IDArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDArea"));

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusArea")
                        .HasColumnType("int");

                    b.HasKey("IDArea");

                    b.ToTable("ccRIACat_Areas");
                });

            modelBuilder.Entity("LoginsAPI.Models.Login", b =>
                {
                    b.Property<int>("Log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Log_id"));

                    b.Property<int>("Extension")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TipoMov")
                        .HasColumnType("bit");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Log_id");

                    b.HasIndex("User_id");

                    b.ToTable("ccloglogin");
                });

            modelBuilder.Entity("LoginsAPI.Models.Usuario", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDArea")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoUser_id")
                        .HasColumnType("int");

                    b.HasKey("User_id");

                    b.HasIndex("IDArea");

                    b.ToTable("ccUsers");
                });

            modelBuilder.Entity("LoginsAPI.Models.Login", b =>
                {
                    b.HasOne("LoginsAPI.Models.Usuario", "UsuarioRef")
                        .WithMany("Logins")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioRef");
                });

            modelBuilder.Entity("LoginsAPI.Models.Usuario", b =>
                {
                    b.HasOne("LoginsAPI.Models.Area", "Area")
                        .WithMany("Usuarios")
                        .HasForeignKey("IDArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("LoginsAPI.Models.Area", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("LoginsAPI.Models.Usuario", b =>
                {
                    b.Navigation("Logins");
                });
#pragma warning restore 612, 618
        }
    }
}
